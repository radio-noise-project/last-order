services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: last-order-development-api
    volumes:
      - .:/go/src/app
      - /var/run/docker.sock:/var/run/docker.sock
    hostname: api
    restart: always
    tty: true
    ports:
      # REST API PORT
      - ${LASTORDER_PORT_DEVELOPMENT}:8081
      # GRPC PORT
      - ${LASTORDER_GRPC_PORT_DEVELOPMENT}:50051
    environment:
      - TZ=${POSTGRES_TIMEZONE}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - development-lo-network

  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    container_name: last-order-development-db
    restart: always
    tty: true
    ports:
      - ${POSTGRES_PORT_DEVELOPMENT}:5432
    hostname: db
    volumes:
      - ./docker/db/data_development:/var/lib/postgresql/data
      - ./docker/db/initdb.d:/docker-entrypoint-initdb.d
    environment:
      TZ: ${POSTGRES_TIMEZONE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - development-lo-network

networks:
  development-lo-network:
    driver: bridge
